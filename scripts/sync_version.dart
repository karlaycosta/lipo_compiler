#!/usr/bin/env dart

import 'dart:io';

/// Script para sincronizar a vers√£o do pubspec.yaml com version.dart
/// 
/// Uso: dart scripts/sync_version.dart [nova_versao]
/// 
/// Se nova_versao for fornecida, atualiza version.dart e pubspec.yaml
/// Caso contr√°rio, sincroniza pubspec.yaml com a vers√£o em version.dart

void main(List<String> args) async {
  final versionFile = File('lib/src/version.dart');
  final pubspecFile = File('pubspec.yaml');

  if (!versionFile.existsSync()) {
    print('‚ùå Arquivo version.dart n√£o encontrado!');
    exit(1);
  }

  if (!pubspecFile.existsSync()) {
    print('‚ùå Arquivo pubspec.yaml n√£o encontrado!');
    exit(1);
  }

  if (args.isNotEmpty) {
    // Atualizar para nova vers√£o
    final newVersion = args[0];
    if (!RegExp(r'^\d+\.\d+\.\d+$').hasMatch(newVersion)) {
      print('‚ùå Formato de vers√£o inv√°lido! Use: MAJOR.MINOR.PATCH');
      exit(1);
    }

    await updateVersion(newVersion, versionFile, pubspecFile);
  } else {
    // Sincronizar pubspec com version.dart
    await syncFromVersionFile(versionFile, pubspecFile);
  }
}

Future<void> updateVersion(String newVersion, File versionFile, File pubspecFile) async {
  print('üîÑ Atualizando para vers√£o $newVersion...');

  // Atualizar version.dart
  final versionContent = await versionFile.readAsString();
  final newVersionContent = versionContent.replaceFirst(
    RegExp(r"const String VERSION = '[^']+';"),
    "const String VERSION = '$newVersion';",
  );
  await versionFile.writeAsString(newVersionContent);
  print('‚úÖ version.dart atualizado');

  // Atualizar pubspec.yaml
  final pubspecContent = await pubspecFile.readAsString();
  final newPubspecContent = pubspecContent.replaceFirst(
    RegExp(r'^version: .+$', multiLine: true),
    'version: $newVersion',
  );
  await pubspecFile.writeAsString(newPubspecContent);
  print('‚úÖ pubspec.yaml atualizado');

  print('üéâ Vers√£o $newVersion aplicada com sucesso!');
}

Future<void> syncFromVersionFile(File versionFile, File pubspecFile) async {
  print('üîÑ Sincronizando pubspec.yaml com version.dart...');

  // Ler vers√£o atual do version.dart
  final versionContent = await versionFile.readAsString();
  final versionMatch = RegExp(r"const String VERSION = '([^']+)';").firstMatch(versionContent);
  
  if (versionMatch == null) {
    print('‚ùå N√£o foi poss√≠vel encontrar a vers√£o em version.dart');
    exit(1);
  }

  final currentVersion = versionMatch.group(1)!;
  print('üìã Vers√£o encontrada: $currentVersion');

  // Atualizar pubspec.yaml
  final pubspecContent = await pubspecFile.readAsString();
  final newPubspecContent = pubspecContent.replaceFirst(
    RegExp(r'^version: .+$', multiLine: true),
    'version: $currentVersion',
  );
  await pubspecFile.writeAsString(newPubspecContent);
  
  print('‚úÖ pubspec.yaml sincronizado com vers√£o $currentVersion');
}
