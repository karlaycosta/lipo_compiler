{
  "Programa básico MiniDart": {
    "prefix": "minidart",
    "body": [
      "// Programa MiniDart",
      "inteiro principal() {",
      "\tvar ${1:nome} = \"${2:valor}\";",
      "\timprima ${1:nome};",
      "\tretorne 0;",
      "}"
    ],
    "description": "Template básico de programa MiniDart"
  },
  "Programa principal": {
    "prefix": "principal",
    "body": [
      "inteiro principal() {",
      "\t$0",
      "\tretorne 0;",
      "}"
    ],
    "description": "Função principal do programa"
  },
  "Função MiniDart": {
    "prefix": "funcao",
    "body": [
      "${1:inteiro} ${2:nome}(${3:parametros}) {",
      "\t$0",
      "\tretorne ${4:valor};",
      "}"
    ],
    "description": "Template de função MiniDart"
  },
  "Função sem retorno": {
    "prefix": "funcaovoid",
    "body": [
      "vazio ${1:nome}(${2:parametros}) {",
      "\t$0",
      "}"
    ],
    "description": "Função void (sem retorno)"
  },
  "Função simples": {
    "prefix": "funcaosimples",
    "body": [
      "inteiro ${1:quadrado}(inteiro ${2:x}) {",
      "\tretorne ${2:x} * ${2:x};",
      "}",
      "",
      "inteiro principal() {",
      "\tvar ${3:resultado} = ${1:quadrado}(${4:5});",
      "\timprima paraTexto(${3:resultado});",
      "\tretorne 0;",
      "}"
    ],
    "description": "Exemplo de função simples"
  },
  "Função com múltiplos parâmetros": {
    "prefix": "funcaomultipla",
    "body": [
      "funcao ${1:somar}(${2:a}, ${3:b}) {",
      "\tretorne ${2:a} + ${3:b};",
      "}",
      "",
      "var ${4:resultado} = ${1:somar}(${5:10}, ${6:20});",
      "imprima ${4:resultado};"
    ],
    "description": "Função com múltiplos parâmetros"
  },
  "Estrutura condicional se": {
    "prefix": "se",
    "body": [
      "se (${1:condicao}) {",
      "\t$0",
      "}"
    ],
    "description": "Estrutura condicional se"
  },
  "Estrutura condicional se-senao": {
    "prefix": "sesenao",
    "body": [
      "se (${1:condicao}) {",
      "\t${2:// código verdadeiro}",
      "} senao {",
      "\t${3:// código falso}",
      "}"
    ],
    "description": "Estrutura condicional se-senao"
  },
  "Laço enquanto": {
    "prefix": "enquanto",
    "body": [
      "var ${1:contador} = ${2:0};",
      "enquanto (${1:contador} < ${3:10}) {",
      "\timprima ${1:contador};",
      "\t${1:contador} = ${1:contador} + 1;",
      "\t$0",
      "}"
    ],
    "description": "Laço enquanto"
  },
  "Laço para": {
    "prefix": "para",
    "body": [
      "para ${1:i} = ${2:1} ate ${3:10} faca {",
      "\timprima ${1:i};",
      "\t$0",
      "}"
    ],
    "description": "Laço para básico"
  },
  "Laço para com incremento": {
    "prefix": "parapasso",
    "body": [
      "para ${1:x} = ${2:0} ate ${3:20} passo ${4:2} faca {",
      "\timprima ${1:x};",
      "\t$0",
      "}"
    ],
    "description": "Laço para com incremento personalizado"
  },
  "Declaração de variável": {
    "prefix": "var",
    "body": [
      "var ${1:nome} = ${2:valor};"
    ],
    "description": "Declaração de variável"
  },
  "imprima": {
    "prefix": "imprima",
    "body": [
      "imprima ${1:valor};"
    ],
    "description": "Comando imprima"
  },
  "retorne": {
    "prefix": "retorne",
    "body": [
      "retorne ${1:valor};"
    ],
    "description": "Comando retorne"
  },
  "Comentário de linha": {
    "prefix": "//",
    "body": [
      "// ${1:comentário}"
    ],
    "description": "Comentário de linha"
  },
  "Verdadeiro": {
    "prefix": "verdadeiro",
    "body": [
      "verdadeiro"
    ],
    "description": "Valor lógico verdadeiro"
  },
  "Falso": {
    "prefix": "falso",
    "body": [
      "falso"
    ],
    "description": "Valor lógico falso"
  },
  "Nulo": {
    "prefix": "nulo",
    "body": [
      "nulo"
    ],
    "description": "Valor nulo"
  },
  "Calculadora com funções": {
    "prefix": "calculadora",
    "body": [
      "funcao somar(a, b) {",
      "\tretorne a + b;",
      "}",
      "",
      "funcao multiplicar(x, y) {",
      "\tretorne x * y;",
      "}",
      "",
      "var resultado1 = somar(${1:10}, ${2:20});",
      "var resultado2 = multiplicar(${3:5}, ${4:6});",
      "",
      "imprima \"Soma: \";",
      "imprima resultado1;",
      "imprima \"Multiplicação: \";",
      "imprima resultado2;"
    ],
    "description": "Exemplo de calculadora com funções"
  },
  "Função void": {
    "prefix": "funcaovoid",
    "body": [
      "vazio ${1:mostrarInfo}() {",
      "\timprima \"${2:Informação importante}\";",
      "\t$0",
      "}"
    ],
    "description": "Função void (sem retorno)"
  },
  "Função tipada": {
    "prefix": "funcaotipada",
    "body": [
      "${1:inteiro} ${2:calcular}(${3:inteiro} ${4:a}, ${5:inteiro} ${6:b}) {",
      "\tretorne ${4:a} ${7:+} ${6:b};",
      "}"
    ],
    "description": "Função com tipos explícitos"
  },
  "Concatenação de strings": {
    "prefix": "concat",
    "body": [
      "texto ${1:nome} = \"${2:João}\";",
      "texto ${3:sobrenome} = \"${4:Silva}\";",
      "texto ${5:completo} = ${1:nome} + \" \" + ${3:sobrenome};",
      "imprima ${5:completo};"
    ],
    "description": "Concatenação de strings"
  },
  "Operadores compostos": {
    "prefix": "compostos",
    "body": [
      "var ${1:x} = ${2:10};",
      "${1:x} += ${3:5};  // ${1:x} = ${1:x} + ${3:5}",
      "${1:x} -= ${4:2};  // ${1:x} = ${1:x} - ${4:2}",
      "${1:x} *= ${5:3};  // ${1:x} = ${1:x} * ${5:3}",
      "imprima ${1:x};"
    ],
    "description": "Operadores de atribuição compostos"
  },
  "Incremento e decremento": {
    "prefix": "incrdecr",
    "body": [
      "var ${1:contador} = ${2:5};",
      "imprima ${1:contador}++;  // ${3:pós-incremento}",
      "imprima ++${1:contador}; // ${4:pré-incremento}",
      "imprima ${1:contador}--; // ${5:pós-decremento}",
      "imprima --${1:contador}; // ${6:pré-decremento}"
    ],
    "description": "Operadores de incremento e decremento"
  },
  "For com incremento": {
    "prefix": "forincremento",
    "body": [
      "para ${1:i} = ${2:0} ate ${3:10} incremente ${4:2} faca {",
      "\timprima ${1:i};",
      "\t$0",
      "}"
    ],
    "description": "Loop for com incremento personalizado"
  },
  "For com decremento": {
    "prefix": "fordecremento",
    "body": [
      "para ${1:i} = ${2:10} ate ${3:0} decremente ${4:2} faca {",
      "\timprima ${1:i};",
      "\t$0",
      "}"
    ],
    "description": "Loop for com decremento personalizado"
  },
  "Tipos explícitos": {
    "prefix": "tipos",
    "body": [
      "inteiro ${1:numero} = ${2:42};",
      "real ${3:decimal} = ${4:3.14};",
      "texto ${5:mensagem} = \"${6:Olá mundo}\";",
      "logico ${7:ativo} = ${8:verdadeiro};"
    ],
    "description": "Declaração de variáveis com tipos explícitos"
  },
  "Lista de inteiros": {
    "prefix": "listainteiro",
    "body": [
      "lista<inteiro> ${1:numeros} = [${2:1, 2, 3, 4, 5}];",
      "imprima \"Tamanho: \" + paraTexto(${1:numeros}.tamanho());",
      "imprima \"Primeiro: \" + paraTexto(${1:numeros}[0]);"
    ],
    "description": "Lista de números inteiros"
  },
  "Lista de texto": {
    "prefix": "listatexto",
    "body": [
      "lista<texto> ${1:nomes} = [\"${2:Ana}\", \"${3:Bruno}\", \"${4:Carlos}\"];",
      "${1:nomes}.adicionar(\"${5:Diana}\");",
      "imprima \"Total de nomes: \" + paraTexto(${1:nomes}.tamanho());"
    ],
    "description": "Lista de strings/texto"
  },
  "Lista de reais": {
    "prefix": "listareal",
    "body": [
      "lista<real> ${1:precos} = [${2:29.99, 15.50, 42.00}];",
      "real ${3:total} = 0.0;",
      "para i = 0 ate ${1:precos}.tamanho() - 1 faca {",
      "\t${3:total} += ${1:precos}[i];",
      "}",
      "imprima \"Total: R$ \" + paraTexto(${3:total});"
    ],
    "description": "Lista de números reais"
  },
  "Lista vazia": {
    "prefix": "listavazia",
    "body": [
      "lista<${1:inteiro}> ${2:lista} = [];",
      "se (${2:lista}.vazio()) {",
      "\timprima \"Lista está vazia\";",
      "}"
    ],
    "description": "Lista vazia com verificação"
  },
  "Operações com lista": {
    "prefix": "listoperacoes",
    "body": [
      "lista<${1:inteiro}> ${2:valores} = [];",
      "",
      "// Adicionar elementos",
      "${2:valores}.adicionar(${3:10});",
      "${2:valores}.adicionar(${4:20});",
      "${2:valores}.adicionar(${5:30});",
      "",
      "// Acessar elementos",
      "imprima \"Primeiro: \" + paraTexto(${2:valores}[0]);",
      "imprima \"Tamanho: \" + paraTexto(${2:valores}.tamanho());",
      "",
      "// Remover último elemento",
      "${1:inteiro} ${6:removido} = ${2:valores}.remover();",
      "imprima \"Removido: \" + paraTexto(${6:removido});"
    ],
    "description": "Operações completas com listas"
  },
  "Switch case": {
    "prefix": "escolha",
    "body": [
      "escolha (${1:valor}) {",
      "\tcaso ${2:1}:",
      "\t\timprima \"${3:Primeira opção}\";",
      "\t\tparar;",
      "\tcaso ${4:2}:",
      "\t\timprima \"${5:Segunda opção}\";",
      "\t\tparar;",
      "\tcontrario:",
      "\t\timprima \"${6:Opção padrão}\";",
      "}"
    ],
    "description": "Estrutura switch/case"
  },
  "Loop do-while": {
    "prefix": "facaenquanto",
    "body": [
      "inteiro ${1:contador} = ${2:0};",
      "faca {",
      "\timprima \"Contador: \" + paraTexto(${1:contador});",
      "\t${1:contador}++;",
      "} enquanto (${1:contador} < ${3:5});"
    ],
    "description": "Loop do-while (faca-enquanto)"
  },
  "Operador ternário": {
    "prefix": "ternario",
    "body": [
      "${1:tipo} ${2:resultado} = ${3:condicao} ? ${4:valor_verdadeiro} : ${5:valor_falso};"
    ],
    "description": "Operador ternário"
  },
  "Typeof": {
    "prefix": "tipode",
    "body": [
      "var ${1:variavel} = ${2:valor};",
      "imprima \"Tipo: \" + tipode ${1:variavel};"
    ],
    "description": "Operador typeof"
  },
  "Conversão para texto": {
    "prefix": "paratexto",
    "body": [
      "${1:tipo} ${2:valor} = ${3:dados};",
      "texto ${4:valorTexto} = paraTexto(${2:valor});",
      "imprima ${4:valorTexto};"
    ],
    "description": "Conversão para texto"
  },
  "Função recursiva": {
    "prefix": "recursiva",
    "body": [
      "inteiro ${1:fatorial}(inteiro ${2:n}) {",
      "\tse (${2:n} <= 1) {",
      "\t\tretorne 1;",
      "\t}",
      "\tretorne ${2:n} * ${1:fatorial}(${2:n} - 1);",
      "}",
      "",
      "inteiro principal() {",
      "\tinteiro ${3:resultado} = ${1:fatorial}(${4:5});",
      "\timprima \"Resultado: \" + paraTexto(${3:resultado});",
      "\tretorne 0;",
      "}"
    ],
    "description": "Função recursiva"
  },
  "Import biblioteca": {
    "prefix": "importar",
    "body": [
      "importar ${1:math};",
      "",
      "inteiro principal() {",
      "\treal ${2:resultado} = ${1:math}.sqrt(${3:16});",
      "\timprima \"Resultado: \" + paraTexto(${2:resultado});",
      "\tretorne 0;",
      "}"
    ],
    "description": "Import de biblioteca"
  },
  "Import com alias": {
    "prefix": "importaralias",
    "body": [
      "importar ${1:string} como ${2:str};",
      "",
      "inteiro principal() {",
      "\ttexto ${3:resultado} = ${2:str}.maiuscula(\"${4:texto}\");",
      "\timprima ${3:resultado};",
      "\tretorne 0;",
      "}"
    ],
    "description": "Import com alias"
  },
  "Constante": {
    "prefix": "constante",
    "body": [
      "constante ${1:inteiro} ${2:MAXIMO} = ${3:100};"
    ],
    "description": "Declaração de constante"
  },
  "Função com lista": {
    "prefix": "funcaolista",
    "body": [
      "${1:inteiro} ${2:somarLista}(lista<inteiro> ${3:valores}) {",
      "\tinteiro ${4:soma} = 0;",
      "\tpara i = 0 ate ${3:valores}.tamanho() - 1 faca {",
      "\t\t${4:soma} += ${3:valores}[i];",
      "\t}",
      "\tretorne ${4:soma};",
      "}",
      "",
      "inteiro principal() {",
      "\tlista<inteiro> ${5:numeros} = [${6:1, 2, 3, 4, 5}];",
      "\tinteiro ${7:total} = ${2:somarLista}(${5:numeros});",
      "\timprima \"Total: \" + paraTexto(${7:total});",
      "\tretorne 0;",
      "}"
    ],
    "description": "Função que trabalha com listas"
  },
  "Debug básico": {
    "prefix": "debug",
    "body": [
      "debug(${1:variavel});",
      "info_debug();"
    ],
    "description": "Comandos de debug"
  }
}
